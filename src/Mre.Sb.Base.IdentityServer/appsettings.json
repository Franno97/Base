{
  "App": {
    "SelfUrl": "http://172.31.3.40:85",
    "ClientUrl": "http://172.31.3.19:80",
    "CorsOrigins": "http://localhost:4200,http://localhost:4300,https://localhost:44307,http://localhost:44307,https://localhost:44323,http://localhost:44323,https://localhost:44352,http://localhost:44352,https://localhost:44362,http://localhost:44362,https://localhost:44372,http://localhost:44372,https://localhost:44382,http://localhost:44382,https://localhost:44132,http://localhost:44132,http://172.31.3.40:81,http://172.31.3.40:82,http://172.31.3.40:83,http://172.31.3.40:84,http://172.31.3.40:91,http://172.31.3.18:80,http://172.31.3.19:80,http://172.31.3.18,http://172.31.3.19,http://172.31.3.40:86,http://localhost:19557",
    "RedirectAllowedUrls": "http://localhost:4200,https://localhost:44307,https://localhost:44132,http://172.31.3.18,http://172.31.3.19,http://172.31.3.40:81"
  },
  "ConnectionStrings": {
    "Default": "Server=172.31.3.34;Database=Mre.Sb.Base;User Id=sa;Password=2xUWheya$kR7ZBJew*a5",
    "AbpIdentityServer": "Server=172.31.3.34;Database=Mre.Sb.Base.ServidorIdentidad;User Id=sa;Password=2xUWheya$kR7ZBJew*a5"
  },
  //Configuracion de redis para utilizar cache distribuido
    "Redis": {
        "Configuration": "172.31.3.44"
    },
  "AutentificacionExterna": {
    //Configuracion OpenId para autentificar usuarios internos
    "OpenId": {
      "ProveedorNombre": "CancelleriaOpenId",
      "NombreVisualizar": "Cancelleria (Usuarios Internos)",
      //"Autoridad": "https://login.microsoftonline.com/Tenant-Id/v2.0/",
      "Autoridad": "https://login.microsoftonline.com/e7c1aff0-a3be-420c-860f-50c5ea9e1d87/v2.0/",
      "ClienteId": "45d1eeda-660d-4ae9-9ccc-d04e28605c2b",
      "ClienteClave": "6_x7Q~ZROyguNvLa34Rb7AxXriJiZQwdAHu4g",
      "UrlRetorno": "/signin-azuread-oidc",
      "ClaimMapeoUsuario": "sub"
    }
  },
  "Auditoria": {
    //Nombre de la aplicacion o microservicio que se registra como un campo en los registros de auditoria
    "AplicacionNombre": "BaseAutentificacion",
    //Codigo de categoria para obtener la configuracion de auditoria
    "ConfiguracionCategoriaCodigo": "BAPI",
    //Tiempo cache para la configuracion auditoria. (Segundos)
    "CacheTiempo": 86400,
    //Nombre claim para obtener el usuario desde Identidad tipo "ClaimsIdentity"
    "ClaimUsuario": "preferred_username",
    //Tipo almacenamiento utilizado. Valores (Archivo,ElasticSearch)
    "AlmacenamientoTipo": "ElasticSearch",
    //Configuracion de la conexion, del almacenamiento auditoria. (Proveedor: ElasticSearch Conexion)
    "AlmacenamientoConexion": "http://172.31.3.25:9200",
    //Nombre grupo. Para agrupamiento de los registros auditoria en el almacenamiento. (Proveedor: ElasticSearch indice debe ser minusculas)
    "AlmacenamientoGrupo": "auditoria"
  },
    //Configuracion clientes para generacion token, consumir Servicios remotos
  "IdentityClients": {
    //Default, si no existe el nombre cliente especifico, se trabaja con el cliente default
    "Default": {
      //"client_credentials" or "password".
      "GrantType": "password",
      "ClientId": "MicroserviceComunication_App",
      "ClientSecret": "531b97e3-9c4c-4eec-9019-2356c5965be8",
      "UserName": "admin",
      "UserPassword": "1q2w3E*",
      "Authority": "http://172.31.3.40:85/",
      "Scope": "Base Notificacion"
    }
  },
  //Configuracion para consumir servicios externos "remotos"
    "RemoteServices": {
        //Api configuracion auditoria.
        "AuditarConf": {
            "BaseUrl": "http://172.31.3.40:83/"
        },
        "Notificacion": {
            "BaseUrl": "http://172.31.3.40:81/"
        }
    },
    //Configuracion Cache
    "Cache": {
        "KeyPrefix": "IdentityServer:",
        //Cache, que no se aplican el prefijo, para compartir con otro componente. (IdentityServer + Base API)
        "ExcluirAplicarPrefijo": ["Volo.Abp.SettingManagement.Setting"]
    },
    //Configuracion eventos distribuidos. General
    "EventosDistribuidos": {
        //En milesegundos
        "IntervaloTiempo": 3000,
        "NumeroReintentos": 3
    },
    //Configuracion eventos distribuidos, utilizando kafka.
    "Kafka": {
        "Connections": {
            "Default": {
                "BootstrapServers": "172.31.3.44:9092",
                "SocketTimeoutMs": 60000
            }
        },
        "EventBus": {
            "GroupId": "Mre.Sb.Autentificacion",
            "TopicName": "Mre.Sb.Base"
        }
    },
    //Configuraciones Clave/Valor
    "Settings": {

    },
    //Configuracion encriptacion
    "StringEncryption": {
        //Texto para encriptacion/desencriptar
        "DefaultPassPhrase": "UYd/qP6?UM7dch~,'LbA"
    },
    //Configuraciones de logs
  "Serilog": {
    "Using": [
      "Serilog.Sinks.Console",
      "Serilog.Sinks.File",
      "Serilog.Sinks.Async",
      "Serilog.Sinks.Elasticsearch",
      "Serilog.Enrichers.Environment",
      "Mre.Sb.Logs"
    ],
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        "Microsoft": "Information",
        "Microsoft.Hosting.Lifetime": "Information"
      }
    },
    "Enrich": [
      //https://github.com/serilog/serilog-enrichers-environment
      "WithMachineName",
      "WithEnvironmentName",
      "WithEnvironmentUserName",
      {
        "Name": "ConUsuario",
        "Args": {
          //Nombre claim, que se utiliza para obtener el usuario
          "usuarioClaim": "preferred_username",
          //Nombre campo, que se registra en los logs, el nombre del usuario
          "usuarioPropiedadNombre": "UserName"
        }
      }
    ],
    "WriteTo": [
      //{
      //  "Name": "Async",
      //  "Args": {
      //    "configure": [
      //      {
      //        "Name": "Console"
      //      }
      //    ]
      //  }
      //},
      {
        "Name": "Async",
        "Args": {
          "configure": [
            {
              "Name": "File",
              "Args": {
                "path": "logs/log-.txt",
                "rollingInterval": "Day",
                "retainedFileCountLimit": 30,
                "shared": true,
                "rollOnFileSizeLimit": true
                //"formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
              }
            }
          ]
        }
      },
      {
        "Name": "Elasticsearch",
        //Opciones: https://github.com/serilog-contrib/serilog-sinks-elasticsearch/wiki/Configure-the-sink
        "Args": {
          "nodeUris": "http://172.31.3.43:9200",
          "indexFormat": "logs_base_autentificacion_{0:yyyy.MM.dd}",
          "autoRegisterTemplate": true,
          "batchAction": "Create",
          //When true fields will be written at the root of the json document.
          "inlineFields": true
        }
      }
    ],
    "Properties": {
      "ApplicationName": "BaseAutentificacion"
    }
  }
}